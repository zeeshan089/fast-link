# .github/workflows/deploy.yml
name: Build and Deploy FastAPI to AKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: ACR Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # NEW STEP: Set up Docker Buildx to enable multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME="${{ secrets.ACR_LOGIN_SERVER }}/fastapi-app:${{ github.sha }}"
        
        # Use docker buildx to build a multi-platform image
        docker buildx build --platform linux/amd64 -t "$IMAGE_NAME" --push .

    # Dynamically create the deployment.yaml file with the correct image name
    - name: Generate Kubernetes Manifest
      run: |
        IMAGE_NAME="${{ secrets.ACR_LOGIN_SERVER }}/fastapi-app:${{ github.sha }}"
        
        echo "apiVersion: apps/v1" > deployment.yaml
        echo "kind: Deployment" >> deployment.yaml
        echo "metadata:" >> deployment.yaml
        echo "  name: fastapi-app-deployment" >> deployment.yaml
        echo "spec:" >> deployment.yaml
        echo "  replicas: 2" >> deployment.yaml
        echo "  selector:" >> deployment.yaml
        echo "    matchLabels:" >> deployment.yaml
        echo "      app: fastapi-app" >> deployment.yaml
        echo "  template:" >> deployment.yaml
        echo "    metadata:" >> deployment.yaml
        echo "      labels:" >> deployment.yaml
        echo "        app: fastapi-app" >> deployment.yaml
        echo "    spec:" >> deployment.yaml
        echo "      containers:" >> deployment.yaml
        echo "      - name: fastapi-app" >> deployment.yaml
        echo "        image: $IMAGE_NAME" >> deployment.yaml
        echo "        ports:" >> deployment.yaml
        echo "        - containerPort: 80" >> deployment.yaml
        echo "---" >> deployment.yaml
        echo "apiVersion: v1" >> deployment.yaml
        echo "kind: Service" >> deployment.yaml
        echo "metadata:" >> deployment.yaml
        echo "  name: fastapi-app-service" >> deployment.yaml
        echo "spec:" >> deployment.yaml
        echo "  type: LoadBalancer" >> deployment.yaml
        echo "  ports:" >> deployment.yaml
        echo "  - port: 80" >> deployment.yaml
        echo "    targetPort: 80" >> deployment.yaml
        echo "  selector:" >> deployment.yaml
        echo "    app: fastapi-app" >> deployment.yaml

    - name: Set AKS Context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Deploy to Kubernetes
      uses: Azure/k8s-deploy@v4
      with:
        action: 'deploy'
        manifests: |
          deployment.yaml
        # The 'images' input is no longer needed because the manifest is now correct